<?php $_shippingRateGroups = $this->getShippingRates(); ?>
<?php $methods = Mage::getModel('marketplace/methods'); ?>
<?php $shippingMethod = Mage::getModel('marketplace/shipping_carrier_marketplace_shipping'); ?>
<?php $methodOptions = $methods->getCollection(); ?>
<?php $vendors = $this->getProductsByVendors(); ?>
<?php $selectedOptions = Mage::getSingleton('checkout/session')->getEstimateData(); ?>
<?php if (!$_shippingRateGroups): ?>
    <p><?php echo $this->__('Sorry, no quotes are available for this order at this time.') ?></p>
<?php else: ?>
    <dl class="sp-methods">
        <?php $quoteItems = $this->getQuote()->getAllItems(); ?>
        <?php $shippingCodePrice = array(); ?>
        <?php $_sole = count($_shippingRateGroups) == 1; ?>
        <?php foreach ($_shippingRateGroups as $code => $_rates): ?>
            <?php if ($code == 'tablerate' && $this->helper('marketplace/shipping')->hideTableRate()) { continue; }?>
            <dt><?php echo $this->escapeHtml($this->getCarrierName($code)) ?></dt>
            <dd>
                <ul>
                    <?php $_sole = $_sole && count($_rates) == 1; ?>
                    <?php foreach ($_rates as $_rate): ?>
                        <?php $shippingCodePrice[] = "'".$_rate->getCode()."':".(float)$_rate->getPrice(); ?>
                        <li<?php echo ($code == 'marketplace_estimated_time') ? " style='display: none;'" : "" ?>>
                            <?php if ($_rate->getErrorMessage()): ?>
                                <ul class="messages"><li class="error-msg"><ul><li><?php echo $this->escapeHtml($_rate->getErrorMessage()) ?></li></ul></li></ul>
                            <?php else: ?>
                                <?php if ($_sole) : ?>
                                    <span class="no-display">
                                        <input name="shipping_method" type="radio" value="<?php echo $_rate->getCode() ?>" id="s_method_<?php echo $_rate->getCode() ?>" checked="checked" />
                                    </span>
                                <?php else: ?>
                                    <input name="shipping_method" type="radio" value="<?php echo $_rate->getCode() ?>" id="s_method_<?php echo $_rate->getCode() ?>"<?php if($_rate->getCode()===$this->getAddressShippingMethod()) echo ' checked="checked"' ?> class="radio"/>
                                    <?php if ($_rate->getCode() === $this->getAddressShippingMethod()): ?>
                                        <script type="text/javascript">
                                            //<![CDATA[
                                            lastPrice = <?php echo (float)$_rate->getPrice(); ?>;
                                            //]]>
                                        </script>
                                    <?php endif; ?>
                                <?php endif; ?>
                                <label for="s_method_<?php echo $_rate->getCode() ?>"><?php echo $this->escapeHtml($_rate->getMethodTitle()) ?>
                                    <?php $_excl = $this->getShippingPrice($_rate->getPrice(), $this->helper('tax')->displayShippingPriceIncludingTax()); ?>
                                    <?php $_incl = $this->getShippingPrice($_rate->getPrice(), true); ?>
                                    <?php echo $_excl; ?>
                                    <?php if ($this->helper('tax')->displayShippingBothPrices() && $_incl != $_excl): ?>
                                        (<?php echo $this->__('Incl. Tax'); ?> <?php echo $_incl; ?>)
                                    <?php endif; ?>
                                </label>
                            <?php endif ?>
                        </li>
                    <?php endforeach; ?>

                    <?php if ($code == 'marketplace_estimated_time') : ?>
                        <?php $supplierMethodsAvailable = true; ?>
                        <?php foreach ($vendors as $key => $vendor): ?>
                            <?php
                            $itemsIds = array();
                            $nonSupplierItems = array();
                            ?>
                            <?php foreach ($vendor as $productId) : ?>
                                <?php
                                foreach ($quoteItems as $quoteItem) {
                                    $hasParentItem = false;
                                    if($quoteItem->getProductId() == $productId) {
                                        if($quoteItem->getProductType() == 'simple') {
                                            $item = $quoteItem;
                                            $itemsIds[] = $quoteItem;
                                            if($quoteItem->getParentItemId()) {
                                                $hasParentItem = true;
                                                $parent = $item->getParentItem()->getProduct()->getId();
                                            }
                                            ?>
                                            <li>
                                                <div class="col2-set">
                                                    <div class="col-1">
                                                        <?php if($hasParentItem) :?>
                                                            <img src="<?php echo (string) Mage::helper('catalog/image')->init($item->getParentItem()->getProduct(), 'thumbnail')->resize(75); ?>" alt="">
                                                            <?php echo $item->getParentItem()->getName(); ?>
                                                        <?php else: ?>
                                                            <img src="<?php echo (string) Mage::helper('catalog/image')->init($item->getProduct(), 'thumbnail')->resize(75); ?>" alt="">
                                                            <?php echo $item->getName(); ?>
                                                        <?php endif; ?>
                                                    </div>
                                                </div>
                                            </li>
                                            <?php
                                            if ($key == 'nonsupplier') {
                                                $nonSupplierItems[] = $quoteItem;
                                            }
                                            $methodOptions->clear()->getSelect()->reset('where');
                                            $itemMethods = $methodOptions->addItemFilter($item)->load();
                                        }
                                    }
                                }
                            endforeach;
                            ?>
                            <li>
                                <div class="col-1 supplier_methods" data-product-id="<?php echo $item->getId(); ?>">
                                    <ul>
                                        <?php if(isset($itemMethods) && $itemMethods->count()): ?>
                                            <?php $i = 0; ?>
                                            <?php foreach($itemMethods AS $option): ?>
                                                <?php if(!$this->canShowMethod($option)) { continue; }?>

                                                <?php if($option->getTableRateAvailable()): ?>
                                                    <?php $price = $shippingMethod->getSumTableRatePrice($itemsIds, $option);?>
                                                <?php else: ?>
                                                    <?php $price = $shippingMethod->getPriceForMethod($item, $option);?>
                                                <?php endif; ?>
                                                <?php $isSelected = (isset($selectedOptions[$item->getId()]) && $price == $selectedOptions[$item->getId()]) || ($i == 0 && !$selectedOptions); ?>
                                                <li>
                                                    <input type="checkbox" class="estimatedNameInput hidden" name="estimatetimeName[<?php echo $item->getId(); ?>]"  value="<?php echo $option->getName(); ?>"<?php echo $isSelected ? ' checked="checked"' : '' ?> />
                                                    <input type="radio" class="estimatedPriceInput radio" name="estimatetime[<?php echo $item->getId(); ?>]" attr-price="<?php echo $price; ?>" value="<?php echo $price; ?>"<?php echo $isSelected ? ' checked="checked"' : '' ?> />
                                                    <label for="estimatetime[<?php echo $item->getId(); ?>]"><?php echo $option->getName(); ?> <span class="price"><?php echo Mage::helper('core')->currency($price, true, false); ?></span></label>
                                                </li>
                                                <?php $i++; ?>
                                            <?php endforeach; ?>
                                        <?php else : ?>
                                            <?php if ($this->helper('marketplace/shipping')->useStoreTableRate()): ?>
                                                <?php $result = $shippingMethod->getStoreTableRateResult($nonSupplierItems, $this->getQuote()->getShippingAddress()); ?>
                                                <?php $price = $result->getPrice(); ?>
                                                <?php $carrierTitle = $result->getCarrierTitle(); ?>
                                            <?php else: ?>
                                                <?php $price = $shippingMethod->getPriceForMethod($item, new Varien_Object()); ?>
                                                <?php $carrierTitle = $this->__("Store Shipping"); ?>
                                            <?php endif; ?>
                                            <?php $isSelected = (isset($selectedOptions[$item->getId()]) && $price == $selectedOptions[$item->getId()]) || !$selectedOptions; ?>
                                            <li>
                                                <input type="radio" class="estimatedPriceInput radio" name="estimatetime[<?php echo $item->getId(); ?>]" attr-price="<?php echo $price; ?>" value="<?php echo $price; ?>"<?php echo $isSelected ? ' checked="checked"' : '' ?> />
                                                <label for="estimatetime[<?php echo $item->getId(); ?>]"><?php echo $carrierTitle; ?> <span class="price"><?php echo Mage::helper('core')->currency($price, true, false); ?></span></label>
                                            </li>
                                        <?php endif; ?>
                                        <?php $childBlock = $this->getChild('cminds_marketplace.checkout_onepage_shipping_method_addon'); ?>
                                        <?php $childBlock->setSupplierId($key); ?>
                                        <?php echo $childBlock->toHtml(); ?>
                                    </ul>
                                </div>
                            </li>
                            <hr>
                        <?php endforeach; ?>
                    <?php endif ?>
                </ul>
            </dd>
        <?php endforeach; ?>
        <input type="hidden" class="validate-supplier-methods"/>

    </dl>
    <script type="text/javascript">
        //<![CDATA[
        <?php if (!empty($shippingCodePrice)): ?>
        var shippingCodePrice = {<?php echo implode(',',$shippingCodePrice); ?>};
        <?php endif; ?>

        $$('input[type="radio"][name="shipping_method"]').each(function(el){
            Event.observe(el, 'click', function(){
                if (el.checked == true) {
                    var getShippingCode = el.getValue();
                    <?php if (!empty($shippingCodePrice)): ?>
                    var newPrice = shippingCodePrice[getShippingCode];
                    if (!lastPrice) {
                        lastPrice = newPrice;
                        quoteBaseGrandTotal += newPrice;
                    }
                    if (newPrice != lastPrice) {
                        quoteBaseGrandTotal += (newPrice-lastPrice);
                        lastPrice = newPrice;
                    }
                    <?php endif; ?>
                    checkQuoteBaseGrandTotal = quoteBaseGrandTotal;
                    return false;
                }
            });
        });

        $$('.estimatedPriceInput').each(function(el){
            Event.observe(el, 'click', function(){
                var radioButtons = $$('.estimatedPriceInput');
                var checkboxButtons = $$('.estimatedNameInput');
                var totalPrice = 0.0;

                for(j = 0; j < checkboxButtons.length; j++) {
                    $(checkboxButtons[j]).removeAttribute("checked");
                }

                for(i = 0; i < radioButtons.length; i++) {
                    if(radioButtons[i].checked) {
                        var price = radioButtons[i].readAttribute('attr-price');
                        totalPrice = parseFloat(totalPrice) + parseFloat(price);
                        $(radioButtons[i]).previous().writeAttribute("checked", "checked");
                    }
                }
                $('s_method_marketplace_shipping_marketplace_shipping').checked=true;
                $$('label[for="s_method_marketplace_shipping_marketplace_shipping"] span.price')[0].update('$' + totalPrice.toFixed(2));

            });
        });
        if($('s_method_marketplace_shipping_marketplace_shipping')) {
            Validation.add('validate-supplier-methods','Please specify shipping method for each supplier.',function(){
                if($('s_method_marketplace_shipping_marketplace_shipping').checked) {
                    var error = false;
                    $$('.supplier_methods').each(function(el) {
                        var product_id = el.readAttribute('data-product-id');
                        var error_supplier_shipping_method = true;
                        $$('input[name="estimatetime[' + product_id + ']"]').each(function(element) {
                            if(element.checked) {
                                error_supplier_shipping_method = false;
                            }
                        });
                        if(error_supplier_shipping_method) {
                            error = true;
                        }
                    });
                    return !error;
                } else {
                    return true;
                }
            });
        }

        //]]>
    </script>
<?php endif; ?>
